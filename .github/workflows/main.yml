name: build and deploy
on: 
  push:
    branches:
      - release
    paths:
      - package.json
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: set container
        run: |
          echo REP_CONTAINER='${{ secrets.CONTAINER }}1' >> $GITHUB_ENV
      - name: check container exists
        id: container_exits
        run: |
          echo EXISTS_CONTAINER=$(echo $(docker container ls --format "{{.Names}}" | sed -n "/${{ secrets.CONTAINER }}/p" | awk '$1=$1')1) >> $GITHUB_ENV
      - name: echo container_exits
        run: |
          echo ${{ env.EXISTS_CONTAINER }}
          echo {{ env.REP_CONTAINER }}
          echo '${{ env.EXISTS_CONTAINER }}' == '${{ env.REP_CONTAINER }}'
      - name: remove container
        if: ('${{ env.EXISTS_CONTAINER }}' == '${{ env.REP_CONTAINER }}')
        run: |
          docker container stop ${{ secrets.CONTAINER }}
          docker container rm ${{ secrets.CONTAINER }}
      - name: Deploy
        run: |
          docker pull ${{ secrets.REPOSITORY }}:${{ env.VERSION }}
          docker run -d --restart=always --name ${{ secrets.CONTAINER }} -p 8080:80 --location type=bind,source=/usr/local/nginx/conf /etc/nginx ${{ secrets.REPOSITORY }}:${{ env.VERSION }}
